valu/
├── Quant/
├── .env
├── __init__.py
├── config.py
├── database.py
├── main.py
├── routers/
│   ├── __init__.py
│   └── api_pick.py
└── services/
    ├── __init__.py           # 프론트 엔드 포인트 작성                 (5년 데이터)
    └── pick_service.py       # 결국 여기서 사용자 요청에 따라 pykrx 주가 /dart 재무 데이터 다운로드, 
                    # indicator 값 계산까지 해줘야 한다. (그래프 그릴 보조지표, 바차트 그릴 분기 자료)

valu/Qunat
        ├─indicator_generator       # calculator_rs를 더 효율적으로 수행할 수 있다면?
        │  │  __init__.py           # 최신화를 위해 일(행) 단위로 계산하는 코드가 필요하다.
        │  │  main.py
        │  │  calc_giants_strategies.py
        │  │  calculator_indicator.py
        │  │  calculator_rs.py
        │  │  data_loader.py
        │  │  gen_giants_picks.py
        │  │  gen_indicator.py
        ├─postgreSQL                # 로컬에서 매일 한번씩 실행, 데이터를 올려놓고 상대강도 계산하기
        │  ├─account_list           # yf 재무 데이터로 지표값 로컬 DB에 올리고 계산하는 코드 짜기
        │  ├─account_processed_data # 거장 픽 종목 선정까지 완료 후, 선정 종목만 서버 DB에 업로드
        │  ├─account_raw_data           # 상대강도 계산도 로컬 DB에서 수행 후 서버 DB 업로드
        │  ├─company_list           # company_list 자체도 주기적으로 업데이트 해줘야 함
        │  ├─date
        │  └─_server_DB_connection
        ├─src_data
        │  ├─balance_sheet
        │  ├─cash_flow
        │  ├─financials
        │  ├─giants_pick
        │  ├─indicators
        │  ├─quarterly_balance_sheet
        │  ├─quarterly_cash_flow
        │  ├─quarterly_financials
        │  ├─stock_data
        │  ├─ticker_list
        │  └─todays_picks
        ├─stock_data_downloader     # yfinance 버전. pykrx 및 dart 버전으로 만들어야 함.
        │  │  main.py               # 로컬 DB에서 상대강도 계산, 거장 선정을 위해 필요한 데이터임.
        │  ├─config
        │  │      settings.json
        │  └─src
        │      │  constants.py
        │      │  data_downloader.py
        │      │  data_processor.py
        │      │  data_saver.py
        │      │  __init__.py
        ├─supabase
        │  └─data_migration
        └─todays_pick_generator
        







├─indicator_generator
│  │  __init__.py
│  │  main.py
│  │  calc_giants_strategies.py
│  │  calculator_indicator.py
│  │  calculator_rs.py
│  │  data_loader.py
│  │  gen_giants_picks.py
│  │  gen_indicator.py
│  
├─src_data
│  │  errors.log
│  │  
│  ├─balance_sheet
│  │      035420.KS_balance_sheet.feather
│  │      
│  ├─cash_flow
│  │      035420.KS_cash_flow.feather
│  │      
│  ├─financials
│  │      035420.KS_financials.feather
│  │      
│  ├─giants_pick
│  │      035420.KS_giants_picks.feather
│  │      
│  ├─indicators
│  │      035420.KS_indicator.feather
│  │      
│  ├─quarterly_balance_sheet
│  │      035420.KS_quarterly_balance_sheet.feather
│  │      
│  ├─quarterly_cash_flow
│  │      035420.KS_quarterly_cash_flow.feather
│  │      
│  ├─quarterly_financials
│  │      035420.KS_quarterly_financials.feather
│  │      
│  ├─stock_data
│  │      035420.KS_data.feather
│  │      
│  └─ticker_list
│          tickers.csv
│          
├─stock_data_downloader
│  │  main.py
│  │  
│  ├─config
│  │      settings.json
│  │      
│  └─src
│      │  constants.py
│      │  data_downloader.py
│      │  data_processor.py
│      │  data_saver.py
│      │  __init__.py
